@phdthesis{Kovacs2023-gq,
  title         = "Type-theoretic signatures for algebraic theories and inductive types",
  author        = "Kov\'{a}cs, Andr\'{a}s",
  publisher     = "E{\"{o}}tv{\"{o}}s Lor\'{a}nd University",
  year          = 2023,
  url           = "https://andraskovacs.github.io/pdfs/phdthesis_compact.pdf"
}
@incollection{Atkey2011-ex,
  title         = "When is a type refinement an inductive type?",
  author        = "Atkey, Robert and Johann, Patricia and Ghani, Neil",
  booktitle     = "Foundations of Software Science and Computational Structures",
  publisher     = "Springer Berlin Heidelberg",
  address       = "Berlin, Heidelberg",
  pages         = "72--87",
  series        = "Lecture notes in computer science",
  year          = 2011,
  url           = "https://bentnib.org/inductive-refinement.pdf"
}
@INPROCEEDINGS{Gratzer2020-kf,
  title     = "Multimodal Dependent Type Theory",
  author    = "Gratzer, Daniel and Kavvos, G A and Nuyts, Andreas and Birkedal,
               Lars",
  booktitle = "Proceedings of the 35th Annual ACM/IEEE Symposium on Logic in
               Computer Science",
  publisher = "ACM",
  address   = "New York, NY, USA",
  month     =  "8~" # jul,
  year      =  2020,
  url       = "http://dx.doi.org/10.1145/3373718.3394736",
  language  = "en"
}
@incollection{McBride2006-fp,
  title         = "A Few Constructions on Constructors",
  author        = "McBride, Conor and Goguen, Healfdene and McKinna, James",
  booktitle     = "Lecture Notes in Computer Science",
  publisher     = "Springer Berlin Heidelberg",
  address       = "Berlin, Heidelberg",
  pages         = "186--200",
  series        = "Lecture notes in computer science",
  year          = 2006,
  url           = "http://www.e-pig.org/downloads/concon.pdf"
}
@book{Adamek2010-ls,
  title         = "Cambridge tracts in mathematics: Algebraic theories: A categorical introduction to general algebra series number 184",
  author        = "Adamek, Jiri and Rosicky, J and Vitale, E M",
  publisher     = "Cambridge University Press",
  address       = "Cambridge, England",
  month         = "18~" # nov,
  year          = 2010,
  url           = "https://www.cambridge.org/academic/subjects/mathematics/logic-categories-and-sets/algebraic-theories-categorical-introduction-general-algebra?format=HB&isbn=9780521119221"
}
@incollection{Goguen2006-sy,
  title         = "Eliminating dependent pattern matching",
  author        = "Goguen, Healfdene and McBride, Conor and McKinna, James",
  booktitle     = "Algebra, Meaning, and Computation",
  publisher     = "Springer Berlin Heidelberg",
  address       = "Berlin, Heidelberg",
  pages         = "521--540",
  series        = "Lecture notes in computer science",
  year          = 2006,
  url           = "https://research.google.com/pubs/archive/99.pdf"
}
@article{Cockx2018-bv,
  title         = "Proof-relevant unification: Dependent pattern matching with only the axioms of your type theory",
  author        = "Cockx, Jesper and Devriese, Dominique",
  journal       = "J. Funct. Prog.",
  publisher     = "Cambridge University Press (CUP)",
  volume        = 28,
  number        = "e12",
  pages         = "e12",
  month         = jan,
  year          = 2018,
  url           = "https://www.cambridge.org/core/services/aop-cambridge-core/content/view/E54D56DC3F5D5361CCDECA824030C38E/S095679681800014Xa.pdf/div-class-title-proof-relevant-unification-dependent-pattern-matching-with-only-the-axioms-of-your-type-theory-div.pdf",
  language      = "en"
}
@article{Mcbride2004-fd,
  title         = "The view from the left",
  author        = "Mcbride, Conor and Mckinna, James",
  journal       = "J. Funct. Programming",
  publisher     = "Cambridge University Press",
  volume        = 14,
  number        = 1,
  pages         = "69--111",
  month         = jan,
  year          = 2004,
  url           = "https://www.cambridge.org/core/services/aop-cambridge-core/content/view/F8A44CAC27CCA178AF69DD84BC585A2D/S0956796803004829a.pdf/div-class-title-the-view-from-the-left-div.pdf"
}
@inproceedings{Wadler1987-zp,
  title         = "Views: a way for pattern matching to cohabit with data abstraction",
  author        = "Wadler, P",
  booktitle     = "Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages",
  publisher     = "Association for Computing Machinery",
  address       = "New York, NY, USA",
  pages         = "307--313",
  series        = "POPL '87",
  month         = "1~" # oct,
  year          = 1987,
  url           = "https://doi.org/10.1145/41625.41653"
}
@inproceedings{Brady2004-ay,
  title         = "Inductive Families Need Not Store Their Indices",
  author        = "Brady, Edwin and McBride, Conor and McKinna, James",
  booktitle     = "Types for Proofs and Programs",
  publisher     = "Springer Berlin Heidelberg",
  pages         = "115--129",
  year          = 2004,
  url           = "http://dx.doi.org/10.1007/978-3-540-24849-1_8"
}
@inproceedings{Atkey2018-pj,
  title         = "Syntax and Semantics of Quantitative Type Theory",
  author        = "Atkey, Robert",
  booktitle     = "Proceedings of the 33rd Annual ACM/IEEE Symposium on Logic in Computer Science",
  publisher     = "Association for Computing Machinery",
  address       = "New York, NY, USA",
  pages         = "56--65",
  series        = "LICS '18",
  month         = "9~" # jul,
  year          = 2018,
  url           = "https://doi.org/10.1145/3209108.3209189",
  keywords      = "Linear Logic, Type Theory;lit-review"
}
@article{Martin-Lof1984-pz,
  title         = "Intuitionistic type theory",
  author        = "Martin-L{\"{o}}f, P",
  volume        = 1,
  pages         = "1--91",
  year          = 1984,
  url           = "https://intuitionistic.wordpress.com/wp-content/uploads/2010/07/martin-lof-tt.pdf"
}
@article{Wadler1990-yo,
  title         = "Deforestation: transforming programs to eliminate trees",
  author        = "Wadler, Philip",
  journal       = "Theor. Comput. Sci.",
  volume        = 73,
  number        = 2,
  pages         = "231--248",
  month         = "1~" # jun,
  year          = 1990,
  url           = "https://www.sciencedirect.com/science/article/pii/030439759090147A"
}
@article{Allais2023-zq,
  title         = "Seamless, Correct, and Generic Programming over Serialised Data",
  author        = "Allais, Guillaume",
  journal       = "arXiv [cs.PL]",
  month         = "20~" # oct,
  year          = 2023,
  url           = "http://arxiv.org/abs/2310.13441",
  archiveprefix = "arXiv",
  primaryclass  = "cs.PL",
  keywords      = "representation"
}
@inproceedings{Allais2023-pf,
  title         = "Builtin Types Viewed as Inductive Families",
  author        = "Allais, Guillaume",
  booktitle     = "Programming Languages and Systems",
  publisher     = "Springer Nature Switzerland",
  pages         = "113--139",
  year          = 2023,
  url           = "http://dx.doi.org/10.1007/978-3-031-30044-8_5",
  keywords      = "type-theory;representation;inductive"
}
@article{Baudon2023-cy,
  title         = "Bit-Stealing Made Legal: Compilation for Custom Memory Representations of Algebraic Data Types",
  author        = "Baudon, Tha{\"{i}}s and Radanne, Gabriel and Gonnord, Laure",
  journal       = "Proc. ACM Program. Lang.",
  publisher     = "Association for Computing Machinery",
  address       = "New York, NY, USA",
  volume        = 7,
  number        = "ICFP",
  pages         = "813--846",
  month         = "31~" # aug,
  year          = 2023,
  url           = "https://doi.org/10.1145/3607858",
  keywords      = "Algebraic Data Types, Compilation, Data Layouts, Pattern Matching;lit-review"
}
@inproceedings{Boulier2017-cm,
  title         = "The next 700 syntactical models of type theory",
  author        = "Boulier, Simon and P\'{e}drot, Pierre-Marie and Tabareau, Nicolas",
  booktitle     = "Proceedings of the 6th ACM SIGPLAN Conference on Certified Programs and Proofs",
  publisher     = "Association for Computing Machinery",
  address       = "New York, NY, USA",
  pages         = "182--194",
  series        = "CPP 2017",
  month         = "16~" # jan,
  year          = 2017,
  url           = "https://doi.org/10.1145/3018610.3018620",
  keywords      = "Dependent type theory, Program translation"
}
@article{Castellan2019-qo,
  title         = "Categories with Families: Unityped, Simply Typed, and Dependently Typed",
  author        = "Castellan, Simon and Clairambault, Pierre and Dybjer, Peter",
  journal       = "arXiv [cs.LO]",
  month         = "1~" # apr,
  year          = 2019,
  url           = "http://arxiv.org/abs/1904.00827",
  archiveprefix = "arXiv",
  primaryclass  = "cs.LO",
  keywords      = "type-theory;categories"
}
@inproceedings{Altenkirch2016-zc,
  title         = "Type theory in type theory using quotient inductive types",
  author        = "Altenkirch, Thorsten and Kaposi, Ambrus",
  booktitle     = "Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages",
  publisher     = "Association for Computing Machinery",
  address       = "New York, NY, USA",
  pages         = "18--29",
  series        = "POPL '16",
  month         = "11~" # jan,
  year          = 2016,
  url           = "https://doi.org/10.1145/2837614.2837638",
  keywords      = "Metaprogramming, Homotopy Type Theory, Agda, Logical Relations, Higher Inductive Types;reading;hott;data-types"
}
@ARTICLE{Kovacs2022-vb,
  title     = "Staged compilation with two-level type theory",
  author    = "Kov\'{a}cs, Andr\'{a}s",
  journal   = "Proc. ACM Program. Lang.",
  publisher = "Association for Computing Machinery (ACM)",
  volume    =  6,
  number    = "ICFP",
  pages     = "540--569",
  month     =  "29~" # aug,
  year      =  2022,
  url       = "https://dl.acm.org/doi/10.1145/3547641",
  keywords  = "unboxed-types-2025",
  language  = "en"
}
@article{Diehl2018-ba,
  title         = "Generic zero-cost reuse for dependent types",
  author        = "Diehl, Larry and Firsov, Denis and Stump, Aaron",
  journal       = "Proc. ACM Program. Lang.",
  publisher     = "Association for Computing Machinery",
  address       = "New York, NY, USA",
  volume        = 2,
  number        = "ICFP",
  pages         = "1--30",
  month         = "30~" # jul,
  year          = 2018,
  url           = "https://doi.org/10.1145/3236799",
  keywords      = "dependent types, reuse, generic programming;compilers;type-theory"
}
@INPROCEEDINGS{Dagand2012-aw,
  title     = "A categorical treatment of ornaments",
  author    = "Dagand, Pierre-Evariste and McBride, Conor",
  booktitle = "2013 28th Annual ACM/IEEE Symposium on Logic in Computer Science",
  publisher = "IEEE",
  month     =  jun,
  year      =  2013,
  url       = "http://dx.doi.org/10.5555/2591370.2591396",
  language  = "en"
}
@inproceedings{Moon2021-eb,
  title         = "Graded Modal Dependent Type Theory",
  author        = "Moon, Benjamin and Eades, III, Harley and Orchard, Dominic",
  booktitle     = "Programming Languages and Systems",
  publisher     = "Springer International Publishing",
  pages         = "462--490",
  year          = 2021,
  url           = "http://dx.doi.org/10.1007/978-3-030-72019-3_17",
  keywords      = "lit-review;type-theory;graded"
}
@article{Allais2023-rg,
  title         = "Frex: dependently-typed algebraic simplification",
  author        = "Allais, Guillaume and Brady, Edwin and Corbyn, Nathan and Kammar, Ohad and Yallop, Jeremy",
  journal       = "arXiv.org",
  publisher     = "arXiv",
  year          = 2023,
  url           = "http://dx.doi.org/10.48550/ARXIV.2306.15375",
  keywords      = "type-theory",
  language      = "en"
}
@INCOLLECTION{Abbott2004-va,
  title     = "Representing nested inductive types using {W}-types",
  author    = "Abbott, Michael and Altenkirch, Thorsten and Ghani, Neil",
  booktitle = "Automata, Languages and Programming",
  publisher = "Springer Berlin Heidelberg",
  address   = "Berlin, Heidelberg",
  pages     = "59--71",
  abstract  = "We show that strictly positive inductive types, constructed from
               polynomial functors, constant exponentiation and arbitrarily
               nested inductive types exist in any Martin-Löf category
               (extensive locally cartesian closed category with W-types) by
               exploiting our work on container types. This generalises a result
               by Dybjer (1997) who showed that non-nested strictly positive
               inductive types can be represented using W-types. We also provide
               a detailed analysis of the categorical infrastructure needed to
               establish the result.",
  series    = "Lecture notes in computer science",
  year      =  2004,
  url       = "https://link.springer.com/chapter/10.1007/978-3-540-27836-8_8",
  language  = "en"
}
@MISC{idris-extraction,
  key          = {Z-idris-extraction},
  title        = "Pragmas — Idris2 0.0 documentation",
  howpublished = "\url{https://idris2.readthedocs.io/en/latest/reference/pragmas.html#transform}",
  note         = "Accessed: 2025-2-19"
}
@MISC{coq-extraction,
  key          = {Z-coq-extraction},
  title        = "Program extraction — {Coq} 8.13.2 documentation",
  howpublished = "\url{https://coq.inria.fr/doc/v8.13/refman/addendum/extraction.html}",
  note         = "Accessed: 2025-2-19"
}
@MISC{agda-extraction,
  key          = {Z-agda-extraction},
  title        = "{agda2hs} Documentation — {agda2hs} documentation",
  howpublished = "\url{https://agda.github.io/agda2hs/}",
  note         = "Accessed: 2025-2-19",
  language     = "en"
}
@MISC{idris-pr,
  key          = {Z-idris-pr},
  title        = "Make {`CONS', `NIL', `JUST'} and {`NOTHING'} constructors have
                  uniform names by {Z}-snails · {Pull Request} \#3486 ·
                  idris-lang/{Idris2}",
  booktitle    = "GitHub",
  abstract     = "Description Any constructor with the CONS tag is replaced with
                  \_builtin.CONS, and similarly for NIL, JUST and NOTHING.
                  Importantly, the tag for a CONS or NIL constructor is always 1
                  or 0 respectiv...",
  howpublished = "\url{https://github.com/idris-lang/Idris2/pull/3486}",
  note         = "Accessed: 2025-2-19",
  language     = "en"
}
@MISC{agda-issue,
  key          = {Z-agda-issue},
  title        = "Should Agda optimise away the erasure from Vec to List? · Issue \#7701 · agda/agda",
  booktitle    = "GitHub",
  howpublished = "\url{https://github.com/idris-lang/Idris2/pull/3486}",
  note         = "Accessed: 2025-2-19",
  language     = "en"
}
@MISC{rocq,
  key          = {Y-rocq},
  title        = "Welcome to a World of",
  booktitle    = "Rocq",
  howpublished = "\url{https://rocq-prover.org/}",
  note         = "Accessed: 2025-4-16",
  keywords     = "proof-assistants",
  language     = "en"
}
@MISC{agda,
  key          = {Y-agda},
  title        = "The {Agda} Wiki",
  howpublished = "\url{https://wiki.portal.chalmers.se/agda/pmwiki.php}",
  note         = "Accessed: 2024-5-3",
  keywords     = "proof-assistants",
  language     = "en"
}
@MISC{lean,
  key          = {Y-lean},
  title        = "Lean: Programming Language and Theorem Prover",
  howpublished = "\url{https://lean-lang.org/}",
  note         = "Accessed: 2024-5-3",
  keywords     = "proof-assistants"
}
@MISC{idris,
  key          = {Y-idris},
  title        = "Idris: A Language for Type-Driven Development",
  howpublished = "\url{https://www.idris-lang.org/}",
  note         = "Accessed: 2024-5-3",
  keywords     = "proof-assistants",
  language     = "en"
}
@MISC{gmp,
  key          = {Y-gmp},
  title        = "The {GNU} {MP} Bignum Library",
  howpublished = "\url{https://gmplib.org/}",
  note         = "Accessed: 2024-12-8",
  language     = "en"
}
@phdthesis{Abel2013-fq,
  title        = {Normalization by evaluation: Dependent types and
                  impredicativity},
  author       = {Abel, Andreas},
  journaltitle = {Habilitation. Ludwig-Maximilians-Universität München},
  date         = {2013},
  url          = {https://www2.tcs.ifi.lmu.de/~abel/talkHabil2013.pdf}
}
